---
import { urlsMatch } from "src/utils";
import navigation from "src/data/navigation";

import DarkModeToggle from "./DarkModeToggle.astro";
import LogoLink from "./LogoLink.astro";
---

<header>
  <div class="contain(full) line()">
    <LogoLink />
    <nav aria-label="header" class="line()">
      {
        navigation.header.map((item) => {
          // There is a bug where the Astro compiler swaps newline
          // characters for whitespace:
          //    https://github.com/withastro/astro/issues/5737
          //
          // This resulted in a trailing whitespace for these
          // header links. By forcing the formatter to put the
          // markup on a single line, we avoid that issue.
          //    https://github.com/SeanMcP/seanmcp.com/issues/35
          const props = {
            "aria-current": urlsMatch(Astro.url.pathname, item.url)
              ? // Type casting is necessary because we aren't setting this
                // attribute directly on the element
                ("page" as any)
              : null,
            href: item.url,
          };
          return <a {...props}>{item.label}</a>;
        })
      }
    </nav>
    <DarkModeToggle />
  </div>
  <div id="scroll-progress">
    <span></span>
  </div>
</header>

<style>
  header {
    background: var(--background);
    left: 0;
    position: fixed;
    right: 0;
    top: 0;
    transition: box-shadow 100ms ease-in-out;
    z-index: 1;
  }

  body[data-scrolling] header {
    box-shadow: 0 0 var(--space-xs) 0 var(--off-background);
  }

  nav {
    margin-left: auto;
  }

  nav a {
    font-weight: bold;
  }

  @media screen and (max-width: 500px) {
    nav a:nth-child(n + 4) {
      display: none;
    }
  }

  #scroll-progress {
    background: linear-gradient(to right, var(--primary), var(--accent));
    bottom: 0;
    display: flex;
    height: var(--stroke-thickness);
    justify-content: flex-end;
    left: 0;
    position: absolute;
    right: 0;
  }

  #scroll-progress span {
    background: var(--background);
    flex-basis: 100%;
    justify-self: end;
  }
</style>
