---
import { readableDate } from "src/utils";

interface Props {
  tendedDates: string[];
}

const { tendedDates } = Astro.props;
const otherTendedDates = tendedDates.slice(1, tendedDates.length - 1);

const first = tendedDates[tendedDates.length - 1];
const readableFirst = readableDate(first);
const last = tendedDates[0];
const readableLast = readableDate(last);
---

<div class="line(xs)">
  <time datetime={first}>{readableFirst}</time>
  <ol aria-label="Tended dates" class="visualization">
    <li title={"Planted " + readableFirst}></li>
    {
      otherTendedDates.map((date) => (
        <li title={"Tended " + readableDate(date)} />
      ))
    }
    {tendedDates.length > 1 && <li title={"Last tended " + readableLast} />}
  </ol>
  {tendedDates.length > 1 && <time datetime={last}>{readableLast}</time>}
</div>

<style>
  ol {
    --_size: 8px;
    display: flex;
    flex: 1;
    justify-content: space-between;
    list-style: none;
    margin: 0;
    padding: 0;
    position: relative;
  }

  ol::before {
    --_x-offset: calc(var(--_size) / 2);
    --_height: var(--stroke-thickness);
    background-color: var(--green);
    content: "";
    height: var(--_height);
    left: var(--_x-offset);
    opacity: 0.5;
    position: absolute;
    right: var(--_x-offset);
    top: calc(50% - calc(var(--_height) / 2));
    width: calc(100% - calc(var(--_x-offset) * 2));
    z-index: -1;
  }

  ol li {
    background-color: var(--green);
    border-radius: 50%;
    border: var(--stroke-thickness) solid var(--green);
    display: block;
    height: var(--_size);
    width: var(--_size);
  }

  ol > li[title^="Last"] {
    background-color: var(--background);
  }
</style>
